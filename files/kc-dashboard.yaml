kiosk_mode:
  non_admin_settings:
    kiosk: true
views:
  - type: sections
    max_columns: 3
    title: KidName Chores
    path: KidName
    sections:
      - type: grid
        cards:
          - type: markdown
            content: |
              {% if is_state('binary_sensor.recycle_day_tomorrow', 'on') %}
                  Tomorrow is Recycling Day!
              {% elif is_state('binary_sensor.recycle_day_today', 'on') %}
                  Today is Recycling Day!
              {% elif is_state('binary_sensor.recycle_in_current_week', 'on') %}
                  It's a Recycling Week!
              {% else %}
                {{ now().strftime('%A %B %-d, %Y') }}
              {% endif %}
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  box-shadow: none !important;
                  border: none !important;
                  padding: 0 !important;
                  margin: 0 !important;
                  text-align: center;
                  align-items: center;
                  font-size: min(100em, 24px); /* Adjust maximum font size */
                }
      - type: grid
        cards:
          - type: markdown
            content: |
              {% if is_state('binary_sensor.recycle_day_tomorrow', 'on') %}
                {{ now().strftime('%A %B %-d, %Y') }}
              {% elif is_state('binary_sensor.recycle_day_today', 'on') %}
                {{ now().strftime('%A %B %-d, %Y') }}
              {% elif is_state('binary_sensor.recycle_in_current_week', 'on') %}
                {{ now().strftime('%A %B %-d, %Y') }}
              {% else %}
                <!-- no content -->
              {% endif %}      
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  text-align: center;
                  align-items: center;
                  flex: 1;
                  border-width: 0 !important;
                  box-shadow: none !important;
                  font-size: min(100em, 24px); /* Adjust maximum font size */
                }
      - type: grid
        cards:
          - type: markdown
            content: |
              <!-- no content -->
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  text-align: center;
                  align-items: center;
                  flex: 1;
                  border-width: 0 !important;
                  box-shadow: none !important;
                  font-size: min(100em, 24px); /* Adjust maximum font size */
                }
      - type: grid
        cards:
          - type: markdown
            content: |
              <!-- no content -->
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  text-align: center;
                  align-items: center;
                  flex: 1;
                  border-width: 0 !important;
                  box-shadow: none !important;
                  font-size: min(100em, 24px); /* Adjust maximum font size */
                }
      - type: grid
        cards:
          - type: heading
            icon: mdi:broom
            heading: Today's Chores
            heading_style: title
      - type: grid
        cards:
          - type: heading
            icon: mdi:broom
            heading: Baseball, Daily & Weekly Chores
            heading_style: title
      - type: grid
        cards:
          - square: false
            type: grid
            columns: 1
            cards:
              - type: custom:auto-entities
                card:
                  square: false
                  type: grid
                  columns: 1
                card_param: cards
                filter:
                  template: >-
                    {%- set ns = namespace(Kid_name='', Kid_name_normalize='',
                    points=0, points_label='', points_icon='' , overdue=0,
                    weekly_completed=0, todays_completed=0, achievements=[],
                    challenges=[]) -%}    

                    {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name
                    = 'KidName'-%} {%- set replacements = {
                        "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                        "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                        "Ď": "d", "ď": "d",
                        "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                        "Í": "i", "í": "i", "Î": "i", "î": "i",
                        "Ł": "l", "ł": "l",
                        "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                        "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                        "Ř": "r", "ř": "r",
                        "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                        "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                        "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                        "Ý": "y", "ý": "y",
                        "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                        " ": "_"
                    } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%-
                    for letter, replacement in replacements.items() -%}
                      {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                    {%- endfor -%} {%- set ns.Kid_name_normalize =
                    ns.Kid_name_normalize | lower -%}

                    {# -- Collect Points -- #}  {%- set points_sensor =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_points' -%}   {%-
                    set ns.points = states(points_sensor) | int(default=0) -%}
                    {%- set ns.points_label = state_attr(points_sensor,
                    'unit_of_measurement') -%} {%- set ns.points_icon =
                    state_attr(points_sensor, 'icon') -%}

                    {# -- Collect Overdue Chores -- #}  {%- set
                    chore_sensor_id_prefix = 'sensor.kc_'~ ns.Kid_name_normalize
                    ~ '_chore_status_' -%}   {%- set ns.overdue = states.sensor 
                        | selectattr('entity_id', 'match', '^' ~ chore_sensor_id_prefix ~ '.*') 
                        | selectattr('state', 'eq', 'overdue') 
                        | list | length | int(default=0) -%}

                    {# -- Collect Weekly Completed -- #}  {%- set weekly_sensor
                    = 'sensor.kc_' ~ ns.Kid_name_normalize ~
                    '_chores_completed_weekly' -%}  {%- set ns.weekly_completed
                    = states(weekly_sensor) | int(default=0) -%}

                    {# -- Collect Today's Completed -- #}  {%- set todays_sensor
                    = 'sensor.kc_' ~ ns.Kid_name_normalize ~
                    '_chores_completed_daily' -%}  {%- set ns.todays_completed =
                    states(todays_sensor) | int(default=0) -%}

                    {# -- Get Highest Badge Earned -- #}   {%- set
                    highest_badge_sensor = 'sensor.kc_' ~ ns.Kid_name_normalize
                    ~ '_highest_badge' -%}   {%- set ns.highest_badge =
                    states(highest_badge_sensor) | default('None') -%}   {%- set
                    ns.highest_badge_icon = state_attr(highest_badge_sensor,
                    'icon') | default('mdi:medal-outline') -%}  

                    {# -- Get Multiplier for Highest Badge -- #}   {%- set
                    highest_badge_entity = 'sensor.kc_' ~ ns.highest_badge |
                    lower | replace(' ', '_') ~ '_badge' -%}   {%- set
                    ns.highest_badge_multiplier =
                    state_attr(highest_badge_entity, 'points_multiplier') |
                    float(default=1) -%}

                    {# -- Construct Badge Display Line for Markdown -- #}   {%-
                    if ns.highest_badge not in ['None', 'unknown', 'Unknown']
                    -%}
                      {%- if ns.highest_badge_multiplier > 1 -%}
                        {%- set ns.badge_display_line = 
                          " " 
                          ~ ns.highest_badge ~ " (x" ~ ns.highest_badge_multiplier|string ~ ")  \n" 
                        -%}
                      {%- else -%}
                        {%- set ns.badge_display_line = 
                          " " 
                          ~ ns.highest_badge ~ "  \n" 
                        -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- set ns.badge_display_line = "" -%}
                    {%- endif -%}


                    {# -- Collect Achievements with Progress and Rewards -- #}
                    {%- set achievement_prefix = 'sensor.kc_' ~
                    ns.Kid_name_normalize ~ '_achievement_status_' -%}   {%- set
                    achievement_list = states.sensor | selectattr('entity_id',
                    'match', achievement_prefix ~ '.*') | list -%}   {%- for
                    sensor in achievement_list -%}
                      {%- set name = state_attr(sensor.entity_id, 'achievement_name') | default('Unknown Achievement') -%}
                      {%- set progress = states(sensor.entity_id) | float(default=0) -%}
                      {%- set award_status = state_attr(sensor.entity_id, 'awarded') -%}

                      {# -- Get Overall Sensor for Reward Points -- #}
                      {%- set overall_sensor = sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                      {%- set reward_points = state_attr(overall_sensor, 'reward_points') | int(default=0) -%}

                      {%- set status = '✔️ Completed' if award_status == 'true' else '⌛ ' ~ progress|round(0) ~ '%' -%}
                      {%- set ns.achievements = ns.achievements + ["         " ~ name ~ " (" ~ status ~ ", 💎 " ~ reward_points ~ ")"] -%}
                    {%- endfor -%}

                    {# -- Collect Challenges with Progress and Rewards -- #} {%-
                    set challenge_prefix = 'sensor.kc_' ~ ns.Kid_name_normalize
                    ~ '_challenge_status_' -%}   {%- set challenge_list =
                    states.sensor | selectattr('entity_id', 'match',
                    challenge_prefix ~ '.*') | list -%}   {%- for sensor in
                    challenge_list -%}
                      {%- set name = state_attr(sensor.entity_id, 'challenge_name') | default('Unknown Challenge') -%}
                      {%- set progress = states(sensor.entity_id) | float(default=0) -%}
                      {%- set award_status = state_attr(sensor.entity_id, 'awarded') -%}

                      {# -- Get Overall Sensor for Reward Points -- #}
                      {%- set overall_sensor = sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                      {%- set reward_points = state_attr(overall_sensor, 'reward_points') | int(default=0) -%}

                      {%- set status = '✔️ Completed' if award_status == 'true' else '⌛ ' ~ progress|round(0) ~ '%' -%}
                      {%- set ns.challenges = ns.challenges + ["         " ~ name ~ " (" ~ status ~ ", 💎 " ~ reward_points ~ ")"] -%}
                    {%- endfor -%}



                    {{
                      {
                        'type': 'markdown',
                        'content': "## 👋 Welcome, " ~ ns.Kid_name ~ "! \n"
                                   "#### " ~ "" ~ "  " ~ ns.points_label ~ ":   " ~ ns.points ~ "          " ~ ns.badge_display_line ~ " \n"
                                   "**📅 Weekly Completed:**   " ~ ns.weekly_completed ~ "  \n"
                                   "**☀️ Today's Completed:**   " ~ ns.todays_completed ~ "  \n\n"
                                   "**🏆 Achievements:**    " ~ 
                                   ("\n" ~ ('\n'.join(ns.achievements)) if ns.achievements | length > 0 else " None") ~ "  \n"
                                   "**🔥 Challenges:**    " ~ 
                                   ("\n" ~ ('\n'.join(ns.challenges)) if ns.challenges | length > 0 else " None") ~ "  \n"
                      }
                    }},
          - square: false
            type: grid
            columns: 1
            cards:
              - type: heading
                icon: mdi:star-settings
                heading: Rewards
                heading_style: title
              - type: custom:auto-entities
                card:
                  square: false
                  type: grid
                  columns: 1
                card_param: cards
                filter:
                  template: >-
                    {%- set ns = namespace(
                      Kid_name='', Kid_name_normalize='',
                      current_points=0,
                      points_label='',
                      points_icon='',
                      rewards=[]
                    ) -%}  

                    {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name
                    = 'KidName'-%} {%- set replacements = {
                        "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                        "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                        "Ď": "d", "ď": "d",
                        "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                        "Í": "i", "í": "i", "Î": "i", "î": "i",
                        "Ł": "l", "ł": "l",
                        "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                        "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                        "Ř": "r", "ř": "r",
                        "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                        "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                        "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                        "Ý": "y", "ý": "y",
                        "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                        " ": "_"
                    } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%-
                    for letter, replacement in replacements.items() -%}
                      {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                    {%- endfor -%} {%- set ns.Kid_name_normalize =
                    ns.Kid_name_normalize | lower -%}

                    {# -- Point Labels -- #}   {%- set points_sensor =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_points' -%}   {%-
                    set ns.current_points = states(points_sensor) |
                    int(default=0) -%}   {%- set ns.points_label =
                    state_attr(points_sensor, 'unit_of_measurement') -%}   {%-
                    set ns.points_icon = state_attr(points_sensor, 'icon') -%}

                    {# -- Collect Available Rewards -- #}   {%- set
                    reward_prefix = 'sensor.kc_' ~ ns.Kid_name_normalize ~
                    '_reward_status_' -%}   {%- set reward_list = states.sensor
                    | selectattr('entity_id', 'match', reward_prefix ~ '.*') |
                    list -%}  

                    {%- for sensor in reward_list -%}
                      {%- set reward_name = state_attr(sensor.entity_id, 'reward_name') | default('Unknown') -%}
                      {%- set reward_cost = state_attr(sensor.entity_id, 'cost') | int(default=0) -%}
                      {%- set reward_status = states(sensor.entity_id) | default('unknown') -%}
                      {%- set reward_icon = state_attr(sensor.entity_id, 'icon') | default('mdi:gift') -%}

                      {# -- Collect Approvals and Claims -- #}  
                      {%- set approval_sensor = 'sensor.kc_' ~ ns.Kid_name_normalize ~ '_reward_approvals_' ~ reward_name | lower | replace(' ', '_') -%}
                      {%- set claim_sensor = 'sensor.kc_' ~ ns.Kid_name_normalize ~ '_reward_claims_' ~ reward_name | lower | replace(' ', '_') -%}
                      {%- set claim_button = 'button.kc_' ~ ns.Kid_name_normalize ~ '_reward_claim_' ~ reward_name | lower | replace(' ', '_') -%}
                      {%- set approvals = states(approval_sensor) | int(default=0) -%}
                      {%- set claims = states(claim_sensor) | int(default=0) -%}

                      {# -- Check Points Availability -- #}  
                      {%- set points_needed = reward_cost - ns.current_points if reward_cost > ns.current_points else 0 -%}
                      {%- set can_claim = "✅" if points_needed == 0 else "❌ Need " ~ points_needed ~ " more" -%}

                      {# -- Add Reward Card to Grid -- #}  
                      {%- set ns.rewards = ns.rewards + [{
                        'type': 'custom:mushroom-template-card',
                        'primary': reward_name,
                        'secondary': "💰 Cost: " ~ reward_cost|string ~ " | 👍 " ~ approvals|string ~ " | 📥 " ~ claims|string ~ " | " ~ can_claim,
                        'icon': reward_icon,
                        'icon_color': 'green' if points_needed == 0 else 'grey',
                        'tap_action': { 'action': 'call-service', 'service': 'button.press', 'target': {'entity_id': claim_button } }
                      }] -%}
                    {%- endfor -%}

                    {{
                      {
                        'type': 'grid',
                        'columns': 1,
                        'square': false,
                        'cards': ns.rewards if ns.rewards | length > 0 else [{'type': 'markdown', 'content': "No rewards available."}]
                      }
                    }},
          - square: false
            type: grid
            columns: 1
            cards:
              - type: custom:auto-entities
                card:
                  square: false
                  type: grid
                  columns: 1
                card_param: cards
                filter:
                  template: >-
                    {%- set ns = namespace(
                      Kid_name='',
                      Kid_name_normalize='',
                      highest_badge='',
                      highest_badge_icon='mdi:medal',
                      highest_badge_multiplier='1',
                      all_badges=[],
                      badge_list='',
                      current_points='',
                      points_label='',
                      points_icon='',
                      challenges=[],
                      achievements=[],
                    ) -%}  

                    {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name
                    = 'KidName'-%} {%- set replacements = {
                        "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                        "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                        "Ď": "d", "ď": "d",
                        "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                        "Í": "i", "í": "i", "Î": "i", "î": "i",
                        "Ł": "l", "ł": "l",
                        "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                        "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                        "Ř": "r", "ř": "r",
                        "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                        "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                        "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                        "Ý": "y", "ý": "y",
                        "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                        " ": "_"
                    } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%-
                    for letter, replacement in replacements.items() -%}
                      {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                    {%- endfor -%} {%- set ns.Kid_name_normalize =
                    ns.Kid_name_normalize | lower -%}

                    {# -- Point Labels -- #}     {%- set points_sensor =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_points' -%} {%- set
                    ns.current_points = states(points_sensor) | int(default=0)
                    -%} {%- set ns.points_label = state_attr(points_sensor,
                    'unit_of_measurement') -%}  {%- set ns.points_icon =
                    state_attr(points_sensor, 'icon') -%}

                    {# -- Get Highest Badge and Multiplier -- #}  {%- set
                    highest_badge_sensor = 'sensor.kc_' ~ ns.Kid_name_normalize
                    ~ '_highest_badge' -%}  {%- set ns.highest_badge =
                    states(highest_badge_sensor) | default('None') -%}  {%- set
                    ns.highest_badge_icon = state_attr(highest_badge_sensor,
                    'icon') | default('mdi:medal-outline') -%}

                    {# -- Get All Earned Badges -- #}  {%- set badges_sensor =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_badges' -%}  {%-
                    set ns.all_badges = state_attr(badges_sensor, 'badges') |
                    default([]) -%}

                    {# -- Get Multiplier for Highest Badge -- #}  {%- set
                    highest_badge_entity = 'sensor.kc_' ~ ns.highest_badge |
                    lower | replace(' ', '_') ~ '_badge' -%}  {%- set
                    ns.highest_badge_multiplier =
                    state_attr(highest_badge_entity, 'points_multiplier') if
                    state_attr(highest_badge_entity, 'points_multiplier') is not
                    none else 1 -%}

                    {# -- Construct the Badge List with Icons -- #}   {%- set
                    ns.badge_list = "\n " -%}   {%- for badge in ns.all_badges
                    -%}
                      {%- set badge_sensor = 'sensor.kc_' ~ badge | lower | replace(' ', '_') ~ '_badge' -%}
                      {%- set badge_icon = state_attr(badge_sensor, 'icon') | default('mdi:medal-outline') -%}
                      {%- set ns.badge_list = ns.badge_list + "-  " ~ badge ~ "  \n" -%}
                    {%- endfor -%}

                    {# -- Collect Achievements with Progress, Rewards, and Icons
                    -- #}   {%- set achievement_prefix = 'sensor.kc_' ~
                    ns.Kid_name | lower ~ '_achievement_status_' -%}   {%- set
                    achievement_list = states.sensor | selectattr('entity_id',
                    'match', achievement_prefix ~ '.*') | list -%}   {%- for
                    sensor in achievement_list -%}
                      {%- set name = state_attr(sensor.entity_id, 'achievement_name') | default('Unknown Achievement') -%}
                      {%- set achievement_icon = state_attr(sensor.entity_id, 'icon') | default('mdi:trophy-outline') -%}
                      {%- set progress = states(sensor.entity_id) | float(default=0) -%}
                      {%- set award_status = state_attr(sensor.entity_id, 'awarded') -%}

                      {# -- Get Overall Sensor for Reward Points -- #}
                      {%- set overall_sensor = sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                      {%- set reward_points = state_attr(overall_sensor, 'reward_points') | int(default=0) -%}

                      {%- set status = '✔️ Completed' if award_status == 'true' else '⌛ ' ~ progress|round(0) ~ '%' -%}
                      {%- set ns.achievements = ns.achievements + ["-  " ~ name ~ " (" ~ status ~ ", 💎 " ~ reward_points ~ ")"] -%}
                    {%- endfor -%}

                    {# -- Collect Challenges with Progress, Rewards, and Icons
                    -- #}   {%- set challenge_prefix = 'sensor.kc_' ~
                    ns.Kid_name | lower ~ '_challenge_status_' -%}   {%- set
                    challenge_list = states.sensor | selectattr('entity_id',
                    'match', challenge_prefix ~ '.*') | list -%}   {%- for
                    sensor in challenge_list -%}
                      {%- set name = state_attr(sensor.entity_id, 'challenge_name') | default('Unknown Challenge') -%}
                      {%- set challenge_icon = state_attr(sensor.entity_id, 'icon') | default('mdi:fire') -%}
                      {%- set progress = states(sensor.entity_id) | float(default=0) -%}
                      {%- set award_status = state_attr(sensor.entity_id, 'awarded') -%}

                      {# -- Get Overall Sensor for Reward Points -- #}
                      {%- set overall_sensor = sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                      {%- set reward_points = state_attr(overall_sensor, 'reward_points') | int(default=0) -%}

                      {%- set status = '✔️ Completed' if award_status == 'true' else '⌛ ' ~ progress|round(0) ~ '%' -%}
                      {%- set ns.challenges = ns.challenges + ["-  " ~ name ~ " (" ~ status ~ ", 💎 " ~ reward_points ~ ")"] -%}
                    {%- endfor -%}


                    {{
                      {
                        'type': 'markdown',
                        'content': "## 🏅 KidName’s Showcase  \n"
                                    "" ~ "  **" ~ ns.points_label ~ ":**   " ~ ns.current_points ~ " \n\n"          
                                   "**🏆 Highest Badge Earned:**   " ~ " " ~ ns.highest_badge ~ "  \n"
                                   "**💎 " ~ ns.points_label ~ " Multiplier:**   x" ~ ns.highest_badge_multiplier ~ "  \n"
                                   " \n"
                                   "#### 🥇 All Earned Badges:  " ~ 
                                   (ns.badge_list if ns.all_badges | length > 0 else " None") ~ "  \n"
                                   "#### 🏆 Achievements:    " ~ 
                                   ('\n' ~ ('\n'.join(ns.achievements)) if ns.achievements | length > 0 else " None") ~ "  \n"
                                   "#### 🔥 Challenges:    " ~ 
                                   ('\n' ~ ('\n'.join(ns.challenges)) if ns.challenges | length > 0 else " None") ~ "  \n"

                      }
                    }},
          - square: false
            type: grid
            columns: 1
            cards:
              - type: custom:auto-entities
                card:
                  square: false
                  type: grid
                  columns: 1
                card_param: cards
                filter:
                  template: >-
                    {%- set ns = namespace(Kid_name='', Kid_name_normalize='',
                    achievement_sensor_id_prefix='', current_points='',
                    points_label='') -%}  

                    {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name
                    = 'KidName'-%} {%- set replacements = {
                        "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                        "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                        "Ď": "d", "ď": "d",
                        "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                        "Í": "i", "í": "i", "Î": "i", "î": "i",
                        "Ł": "l", "ł": "l",
                        "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                        "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                        "Ř": "r", "ř": "r",
                        "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                        "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                        "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                        "Ý": "y", "ý": "y",
                        "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                        " ": "_"
                    } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%-
                    for letter, replacement in replacements.items() -%}
                      {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                    {%- endfor -%} {%- set ns.Kid_name_normalize =
                    ns.Kid_name_normalize | lower -%}        

                    {%- set ns.achievement_sensor_id_prefix = 'sensor.kc_' ~
                    ns.Kid_name_normalize ~ '_achievement_status_' -%} 

                            {# -- Point Labels -- #}     {%- set points_sensor = 'sensor.kc_' ~
                    ns.Kid_name_normalize ~ '_points' -%} {%- set
                    ns.current_points = states(points_sensor) | int(default=0)
                    -%} {%- set ns.points_label = state_attr(points_sensor,
                    'unit_of_measurement') -%}  {%- set ns.points_icon =
                    state_attr(points_sensor, 'icon') -%}

                    {%- set achievements = states.sensor |
                    selectattr('entity_id', 'match',
                    ns.achievement_sensor_id_prefix ~ '.*') | list -%}

                    {%- if achievements | length == 0 -%}
                      {{
                        {
                          'type': 'markdown',
                          'content': "### 🏆 No Achievements Found  \n"
                                     "Start a challenge to track your progress!"
                        }
                      }},
                    {%- else -%}
                      {%- for achievement_sensor in achievements -%}
                        {%- set achievement_name = state_attr(achievement_sensor.entity_id, 'achievement_name') | default('Unknown') -%}
                        {%- set achievement_overall_sensor = achievement_sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                        {%- set target_value = state_attr(achievement_sensor.entity_id, 'target_value') | int(default=0) -%}
                        {%- set raw_progress = state_attr(achievement_sensor.entity_id, 'raw_progress') | float(default=0) -%}
                        {%- set awarded = state_attr(achievement_sensor.entity_id, 'awarded') | default(false) -%}
                        {%- set reward_points = state_attr(achievement_overall_sensor, 'reward_points') | int(default=0) -%}
                        {%- set achievement_type = state_attr(achievement_overall_sensor, 'type') | default('General') -%}
                        {%- set progress_percentage = ((raw_progress / target_value) * 100) | round(1) if target_value > 0 else 0 -%}
                        {%- set icon = state_attr(achievement_sensor.entity_id, 'icon') | default('mdi:flag-checkered') -%}

                        {%- set awarded_text = '✔️ Earned' if awarded else '⌛ In Process' -%}
                        {%- set goal_label = 
                          target_value ~ ' (Streak Goal)' if achievement_type == 'chore_streak' 
                          else target_value ~ ' (Completion Goal)'
                        -%}

                        {{
                          {
                            'type': 'markdown',
                            'content': "###  Achievement:  " ~ achievement_name ~ "  \n"
                                       "**🎯 Goal:**   " ~  goal_label ~ " \n"
                                       "**📊 Progress:**   " ~ raw_progress|int|string ~ "/" ~ target_value|string ~ 
                                       " (" ~ progress_percentage|string ~ "%)  \n"
                                       "**💎 Reward:**   " ~ reward_points|string ~ " " ~ ns.points_label ~ "  \n"
                                       "**🏅 Awarded:**   " ~ awarded_text ~ "  \n"
                          }
                        }},
                      {%- endfor -%}
                    {%- endif -%}
          - square: false
            type: grid
            columns: 1
            cards:
              - type: custom:auto-entities
                card:
                  square: false
                  type: grid
                  columns: 1
                card_param: cards
                filter:
                  template: >-
                    {%- set ns = namespace(
                      Kid_name='',
                      Kid_name_normalize = '',
                      current_points='',
                      points_label='',
                      challenges=[]
                    ) -%}  

                    {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name
                    = 'KidName'-%} {%- set replacements = {
                        "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                        "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                        "Ď": "d", "ď": "d",
                        "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                        "Í": "i", "í": "i", "Î": "i", "î": "i",
                        "Ł": "l", "ł": "l",
                        "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                        "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                        "Ř": "r", "ř": "r",
                        "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                        "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                        "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                        "Ý": "y", "ý": "y",
                        "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                        " ": "_"
                    } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%-
                    for letter, replacement in replacements.items() -%}
                      {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                    {%- endfor -%} {%- set ns.Kid_name_normalize =
                    ns.Kid_name_normalize | lower -%}

                    {# -- Point Labels -- #}      {%- set points_sensor =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_points' -%}  {%-
                    set ns.current_points = states(points_sensor) |
                    int(default=0) -%}  {%- set ns.points_label =
                    state_attr(points_sensor, 'unit_of_measurement') -%}   {%-
                    set ns.points_icon = state_attr(points_sensor, 'icon') -%}

                    {# -- Collect Challenges -- #} {%- set challenge_prefix =
                    'sensor.kc_' ~ ns.Kid_name_normalize ~ '_challenge_status_'
                    -%} {%- set challenges = states.sensor |
                    selectattr('entity_id', 'match', challenge_prefix ~ '.*') |
                    list -%}

                    {%- if challenges | length == 0 -%}
                      {{
                        {
                          'type': 'markdown',
                          'content': "### 🏁 No Challenges Found  \n"
                                     "Start a challenge to push your limits!"
                        }
                      }},
                    {%- else -%}
                      {%- for challenge_sensor in challenges -%}
                        {%- set challenge_name = state_attr(challenge_sensor.entity_id, 'challenge_name') | default('Unknown') -%}
                        {%- set challenge_overall_sensor = challenge_sensor.entity_id | regex_replace('^sensor\\.kc_[^_]+_', 'sensor.kc_') -%}
                        {%- set target_value = state_attr(challenge_sensor.entity_id, 'target_value') | int(default=0) -%}
                        {%- set raw_progress = state_attr(challenge_sensor.entity_id, 'raw_progress') | float(default=0) -%}
                        {%- set awarded = state_attr(challenge_sensor.entity_id, 'awarded') | default(false) -%}
                        {%- set reward_points = state_attr(challenge_overall_sensor, 'reward_points') | int(default=0) -%}
                        {%- set start_date_utc = state_attr(challenge_overall_sensor, 'start_date') -%}
                        {%- set end_date_utc = state_attr(challenge_overall_sensor, 'end_date') -%}
                        {%- set challenge_type = state_attr(challenge_overall_sensor, 'type') | default('General') -%}

                        {# Convert start and end dates to local time and short format #}
                        {%- set start_date = as_datetime(start_date_utc).astimezone().strftime('%b %d, %Y') if start_date_utc else 'N/A' -%}
                        {%- set end_date = as_datetime(end_date_utc).astimezone().strftime('%b %d, %Y') if end_date_utc else 'N/A' -%}
                        {%- set icon = state_attr(challenge_sensor.entity_id, 'icon') | default('mdi:flag-checkered') -%}

                        {%- set progress_percentage = states(challenge_sensor.entity_id) | float(default=0) | round(0) -%}
                        {%- set awarded_text = '✔️ Earned' if awarded else '⌛ In Process' -%}
                        {%- set goal_label = target_value ~ ' (Total Chores)' if challenge_type == 'total_within_window' else target_value ~ ' (Per Day Goal)' -%}

                        {{
                          {
                            'type': 'markdown',
                            'content': "###  Challenge:  " ~ challenge_name ~ "  \n"
                                       "**🎯 Goal:**   " ~ goal_label ~ " \n"
                                       "**📊 Progress:**   " ~ raw_progress|int|string ~ "/" ~ target_value|string ~ 
                                       " (" ~ progress_percentage|string ~ "%)  \n"
                                       "**💎 Reward:**   " ~ reward_points|string ~ " " ~ ns.points_label ~ "  \n"
                                       "**📅 Start Date:**   " ~ start_date ~ "  \n"
                                       "**📅 End Date:**   " ~ end_date ~ "  \n"
                                       "**🏅 Status:**   " ~ awarded_text ~ "  \n"
                          }
                        }},
                      {%- endfor -%}
                    {%- endif -%}
      - type: grid
        square: false
        columns: 1
        cards:
          - type: custom:auto-entities
            card:
              square: false
              type: grid
              columns: 2
            card_param: cards
            filter:
              template: >-
                {%- set ns = namespace(Kid_name='', Kid_name_normalize='',
                overdue_buttons=[], perfect_buttons=[],
                baseball_daily_buttons=[],  am_buttons=[], afternoon_buttons=[],
                pm_buttons=[], other_buttons=[], complete_buttons=[],
                baseball_choice1_buttons=[], heading_card_blank='',
                weekly_buttons=[], monthly_buttons=[], points_label='',
                points_icon='') -%} 

                {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name =
                'KidName'-%} {%- set replacements = {
                    "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                    "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                    "Ď": "d", "ď": "d",
                    "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                    "Í": "i", "í": "i", "Î": "i", "î": "i",
                    "Ł": "l", "ł": "l",
                    "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                    "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                    "Ř": "r", "ř": "r",
                    "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                    "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                    "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                    "Ý": "y", "ý": "y",
                    "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                    " ": "_"
                } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%- for
                letter, replacement in replacements.items() -%}
                  {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                {%- endfor -%} {%- set ns.Kid_name_normalize =
                ns.Kid_name_normalize | lower -%}

                {# -- Point Labels -- #}    {%- set points_sensor = 'sensor.kc_'
                ~ ns.Kid_name_normalize ~ '_points' -%}     {%- set
                ns.points_label = state_attr(points_sensor,
                'unit_of_measurement') -%}  {%- set ns.points_icon =
                state_attr(points_sensor, 'icon') -%}        


                {%- set ns.heading_card_blank =
                  {
                    'type': 'heading',
                    'icon': ' ',
                    'heading': '',
                    'heading_style': 'title',
                  }
                -%}  {#-- Build a list of button entities for this kid --#} {%-
                set prefix = 'button\\.kc_' ~ (ns.Kid_name_normalize) ~
                '_chore_claim_' -%}   {%- set buttons = states.button |
                selectattr('entity_id', 'match', '^' ~ prefix) | list -%} 

                {#-- Use namespace to persist changes across loop iterations
                --#}  {%- for button in buttons -%}
                  {%- set today_00 = as_timestamp(now().date()) -%}
                  {%- set today_12 = today_00 + (12 * 60 * 60) -%}
                  {%- set today_17 = today_00 + (17 * 60 * 60) -%}
                  {%- set today_24 = today_00 + ((24 * 60 * 60) - 1) -%}
                  {%- set chore_sensor_id = button.entity_id | regex_replace('^button\\.kc_', 'sensor.kc_') | regex_replace('_claim_', '_status_') -%}
                  {%- set sensor_state = states(chore_sensor_id) -%}
                  {%- set entity_label = labels(button.entity_id) -%}
                  {%- set due_date_str = state_attr(chore_sensor_id, 'due_date') -%}
                  {%- if sensor_state == 'overdue' -%}
                    {%- set ns.overdue_buttons = ns.overdue_buttons + [button] -%}
                  {%- elif sensor_state == 'approved' -%}
                    {%- continue -%}                    
                  {%- else -%}
                    {%- if due_date_str is not none and due_date_str != 'unknown' -%}
                      {%- if "weekly_chore" in entity_label -%}
                        {%- set ns.weekly_buttons = ns.weekly_buttons + [button] -%}
                      {%- elif "monthly" in entity_label -%}
                        {%- set ns.monthly_buttons = ns.monthly_buttons + [button] -%}                
                      {%- endif -%}
                      {%- set due_date_ts = as_timestamp(due_date_str) -%}
                      {%- if today_00 <= due_date_ts < today_24 -%}
                        {%- if "perfectday" in entity_label -%}
                          {%- set ns.perfect_buttons = ns.perfect_buttons + [button] -%}
                        {%- elif "baseball_daily" in entity_label -%}
                          {%- set ns.baseball_daily_buttons = ns.baseball_daily_buttons + [button] -%}                  
                        {%- elif "baseball_choice_1" in entity_label -%}
                          {%- set ns.baseball_choice1_buttons = ns.baseball_choice1_buttons + [button] -%}                                    
                        {%- elif due_date_ts <= today_12 -%}
                          {%- set ns.am_buttons = ns.am_buttons + [button] -%}
                        {%- elif due_date_ts <= today_17 -%}
                          {%- set ns.afternoon_buttons = ns.afternoon_buttons + [button] -%}                  
                        {%- elif due_date_ts < today_24 -%}
                          {%- set ns.pm_buttons = ns.pm_buttons + [button] -%}
                        {%- else -%}
                          {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                        {%- endif -%}
                      {%- else -%}
                        {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                    {%- endif -%}
                  {%- endif -%}
                {%- endfor -%}

                {%- set button_groups = [
                    {'name': '!!!!!!!!!!! Overdue !!!!!!!!!!!', 'buttons': ns.overdue_buttons, 'icon': 'mdi:alert-octagon'},
                    {'name': 'Due This Morning', 'buttons': ns.am_buttons, 'icon': 'mdi:alarm'},
                    {'name': 'Due This Afternoon', 'buttons': ns.afternoon_buttons, 'icon': 'mdi:clock'},
                    {'name': 'Due By End of Day', 'buttons': ns.pm_buttons, 'icon': 'mdi:calendar-today'},
                    {'name': 'Daily Summary', 'buttons': ns.perfect_buttons, 'icon': 'mdi:calendar-today'},
                ] -%}

                {%- for group in button_groups -%}
                  {%- if group.buttons | length > 0 -%}
                    {%- set heading_card =
                      {
                        'type': 'heading',
                        'icon': group.icon,
                        'heading': group.name,
                        'heading_style': 'title',
                      }
                    -%}
                    {{- heading_card -}},
                    {{- ns.heading_card_blank -}},          

                    {%- for button in group.buttons -%}
                      {%- set chore_sensor_id = button.entity_id | regex_replace('^button\\.kc_', 'sensor.kc_') | regex_replace('_claim_', '_status_') -%}
                      {%- set streak_chore_sensor_id = chore_sensor_id | regex_replace('_status_', '_streak_') -%}
                      {%- set primary = button.attributes.friendly_name.split(' - ')[2]~ (' (S)' if state_attr(chore_sensor_id, 'shared_chore') else '')  -%}
                      {%- if button.state not in ['unknown', 'unavailable', 'error'] -%}
                        {%- set ts_diff = (now().timestamp() - as_timestamp(button.state)) | float(0) -%}
                        {%- set last_update = (
                            '%.0f minutes ago' % (ts_diff / 60)
                            if ts_diff < 3600 else
                            '%.0f hours ago' % (ts_diff / 3600)
                            if ts_diff < 86400 else
                            '%.0f days ago' % (ts_diff / 86400)
                          ) -%}
                      {%- else -%}
                        {%- set last_update = '' -%}
                      {%- endif -%}
                      {%- set due_date_str = state_attr(chore_sensor_id, 'due_date') | string -%}
                      {%- set due_date = as_datetime(due_date_str).astimezone() if due_date_str and due_date_str not in ['None', 'unknown', 'unavailable'] else None -%}
                      {%- set today = now().astimezone().date() -%}
                      
                      {%- set due_date_short = 
                        'No due date' if not due_date 
                        else (
                          due_date.strftime('%-I:%M %p') if due_date.date() == today 
                          else due_date.strftime('%a %b %-d')
                        )
                      -%}   
                      {%- set chore_state = states(chore_sensor_id) -%}
                      {%- set points = state_attr(chore_sensor_id, 'default_points') | string -%}
                      {%- set streak = states(streak_chore_sensor_id) | string -%}              
                      {%- set secondary_options = 'Points: ' + points + '\n' + 'Streak: ' + streak + '\n' + 'Last: ' + last_update  + '\n \n' + 'Status: ' + chore_state + '\n' + 'Due: ' + due_date_short -%}
                      {%- set secondary = ns.points_label ~ ': ' + points + '\n' + 'Streak: ' + streak + '\n \n' + 'Status: ' + chore_state.title() + '\n' + 'Due: ' + due_date_short -%}
                      {%- set icon_color = (
                            'green' if chore_state == 'approved' else
                            'yellow' if chore_state == 'partial' else
                            'orange' if chore_state == 'claimed' else
                            'red' if chore_state == 'overdue' else
                            'grey'
                          ) -%}
                      {%- set badge_color = (
                            'green' if chore_state == 'approved' else
                            'green' if chore_state == 'partial' else
                            'green' if chore_state == 'claimed' else
                            'red' if chore_state == 'overdue' else
                            'grey'
                          ) -%}
                      {%- set badge_icon = (
                            'mdi:check-bold' if chore_state == 'approved' else
                            'mdi:check-bold' if chore_state == 'partial' else
                            'mdi:check-bold' if chore_state == 'claimed' else
                            'mdi:exclamation-thick' if chore_state == 'overdue' else
                            ''
                          ) -%}
                      {{
                        {
                          'type': 'custom:mushroom-template-card',
                          'entity': button.entity_id,
                          'primary': primary,
                          'multiline_secondary': 'false',
                          'secondary': secondary,
                          'layout': 'horizontal',
                          'icon': button.attributes.icon,
                          'icon_color': icon_color,
                          'badge_icon': badge_icon,
                          'badge_color': badge_color,
                          'tap_action': {
                            'action': 'toggle'
                          },
                          'hold_action': {
                            'action': 'more-info'
                          },
                        }
                      }},
                    {%- endfor -%}

                    {%- if (group.buttons | length is odd) -%}{{ ns.heading_card_blank }},{%- endif -%}
                  {%- endif -%}
                {%- endfor -%}        
      - type: grid
        square: false
        columns: 1
        cards:
          - type: custom:auto-entities
            card:
              square: false
              type: grid
              columns: 2
            card_param: cards
            filter:
              template: >-
                {%- set ns = namespace(Kid_name='', Kid_name_normalize='',
                overdue_buttons=[], perfect_buttons=[],
                baseball_daily_buttons=[],  am_buttons=[], afternoon_buttons=[],
                pm_buttons=[], other_buttons=[], complete_buttons=[],
                baseball_choice1_buttons=[], heading_card_blank='',
                weekly_buttons=[], monthly_buttons=[], points_label='',
                points_icon='') -%} 

                {# -- Set Kid_name and normalize -- #}  {%- set ns.Kid_name =
                'KidName'-%} {%- set replacements = {
                    "Á": "a", "á": "a", "Ą": "a", "ą": "a", "Ă": "a", "ă": "a", "Â": "a", "â": "a",
                    "Č": "c", "č": "c", "Ć": "c", "ć": "c",
                    "Ď": "d", "ď": "d",
                    "É": "e", "é": "e", "Ě": "e", "ě": "e", "Ę": "e", "ę": "e",
                    "Í": "i", "í": "i", "Î": "i", "î": "i",
                    "Ł": "l", "ł": "l",
                    "Ń": "n", "ń": "n", "Ň": "n", "ň": "n",
                    "Ó": "o", "ó": "o", "Ő": "o", "ő": "o", "Ö": "o", "ö": "o",
                    "Ř": "r", "ř": "r",
                    "Š": "s", "š": "s", "Ś": "s", "ś": "s", "Ș": "s", "ș": "s",
                    "Ț": "t", "ț": "t", "Ť": "t", "ť": "t",
                    "Ú": "u", "ú": "u", "Ű": "u", "ű": "u", "Ů": "u", "ů": "u", "Ü": "u", "ü": "u",
                    "Ý": "y", "ý": "y",
                    "Ž": "z", "ž": "z", "Ź": "z", "ź": "z", "Ż": "z", "ż": "z",
                    " ": "_"
                } -%} {%- set ns.Kid_name_normalize = ns.Kid_name -%}  {%- for
                letter, replacement in replacements.items() -%}
                  {%- set ns.Kid_name_normalize = ns.Kid_name_normalize | replace(letter, replacement) -%}
                {%- endfor -%} {%- set ns.Kid_name_normalize =
                ns.Kid_name_normalize | lower -%}

                {# -- Point Labels -- #}    {%- set points_sensor = 'sensor.kc_'
                ~ ns.Kid_name_normalize ~ '_points' -%}     {%- set
                ns.points_label = state_attr(points_sensor,
                'unit_of_measurement') -%}  {%- set ns.points_icon =
                state_attr(points_sensor, 'icon') -%}        


                {%- set ns.heading_card_blank =
                  {
                    'type': 'heading',
                    'icon': ' ',
                    'heading': '',
                    'heading_style': 'title',
                  }
                -%}  {#-- Build a list of button entities for this kid --#} {%-
                set prefix = 'button\\.kc_' ~ (ns.Kid_name_normalize) ~
                '_chore_claim_' -%}   {%- set buttons = states.button |
                selectattr('entity_id', 'match', '^' ~ prefix) | list -%} 

                {#-- Use namespace to persist changes across loop iterations
                --#}  {%- for button in buttons -%}
                  {%- set today_00 = as_timestamp(now().date()) -%}
                  {%- set today_12 = today_00 + (12 * 60 * 60) -%}
                  {%- set today_17 = today_00 + (17 * 60 * 60) -%}
                  {%- set today_24 = today_00 + ((24 * 60 * 60) - 1) -%}
                  {#-- Calculate end of week (Saturday 11:59 PM) --#}
                  {%- set day_of_week = now().weekday() -%}
                  {%- if day_of_week == 5 -%}  {# If today is Saturday #}
                    {%- set today_eow = today_00 + (23 * 60 * 60) + (59 * 60) -%}
                  {%- else -%}
                    {%- set days_until_saturday = (5 - day_of_week) if day_of_week <= 5 else (7 - day_of_week + 5) -%}
                    {%- set saturday_midnight = today_00 + (days_until_saturday * 24 * 60 * 60) -%}
                    {%- set today_eow = saturday_midnight + (23 * 60 * 60) + (59 * 60) -%}
                  {%- endif -%}
                  {#-- Calculate end of month (last day of the month 11:59 PM) --#}
                  {%- set today_eom = as_timestamp(((now().replace(day=1) + timedelta(days = 32)).replace(day=1,hour=23,minute=59,second=59,microsecond=0) -timedelta(days=1))) -%}
                  {%- set chore_sensor_id = button.entity_id | regex_replace('^button\\.kc_', 'sensor.kc_') | regex_replace('_claim_', '_status_') -%}
                  {%- set sensor_state = states(chore_sensor_id) -%}
                  {%- set entity_label = labels(button.entity_id) -%}
                  {%- set due_date_str = state_attr(chore_sensor_id, 'due_date') -%}
                  {%- if sensor_state == 'overdue' -%}
                    {%- set ns.overdue_buttons = ns.overdue_buttons + [button] -%}
                  {%- elif sensor_state == 'approved' -%}
                    {%- continue -%}
                  {%- else -%}
                    {%- if due_date_str is not none and due_date_str != 'unknown' -%}
                      {%- set due_date_ts = as_timestamp(due_date_str) -%}
                      {%- if "weekly_chore" in entity_label and due_date_ts <= today_eow -%}
                        {%- set ns.weekly_buttons = ns.weekly_buttons + [button] -%}
                      {%- elif "monthly_chore" in entity_label and due_date_ts <= today_eom -%}
                        {%- set ns.monthly_buttons = ns.monthly_buttons + [button] -%}                
                      {%- elif today_00 <= due_date_ts < today_24 -%}
                        {%- if "perfectday" in entity_label -%}
                          {%- set ns.perfect_buttons = ns.perfect_buttons + [button] -%}
                        {%- elif "baseball_daily" in entity_label -%}
                          {%- set ns.baseball_daily_buttons = ns.baseball_daily_buttons + [button] -%}                  
                        {%- elif "baseball_choice_1" in entity_label -%}
                          {%- set ns.baseball_choice1_buttons = ns.baseball_choice1_buttons + [button] -%}                                    
                        {%- elif due_date_ts <= today_12 -%}
                          {%- set ns.am_buttons = ns.am_buttons + [button] -%}
                        {%- elif due_date_ts <= today_17 -%}
                          {%- set ns.afternoon_buttons = ns.afternoon_buttons + [button] -%}                  
                        {%- elif due_date_ts < today_24 -%}
                          {%- set ns.pm_buttons = ns.pm_buttons + [button] -%}
                        {%- else -%}
                          {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                        {%- endif -%}
                      {%- else -%}
                        {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- set ns.other_buttons = ns.other_buttons + [button] -%}
                    {%- endif -%}
                  {%- endif -%}
                {%- endfor -%}

                {%- set button_groups = [
                    {'name': 'Baseball Dailies', 'buttons': ns.baseball_daily_buttons, 'icon': 'mdi:baseball-bat'},
                    {'name': 'Baseball Choose 1', 'buttons': ns.baseball_choice1_buttons, 'icon': 'mdi:baseball-bat'},            
                    {'name': 'Weekly', 'buttons': ns.weekly_buttons, 'icon': 'mdi:calendar-week'},
                    {'name': 'Monthly', 'buttons': ns.monthly_buttons, 'icon': 'mdi:calendar-month'},                    
                    {'name': 'Upcoming', 'buttons': ns.other_buttons, 'icon': 'fapro:crystall-ball'}
                ] -%}

                {%- for group in button_groups -%}
                  {%- if group.buttons | length > 0 -%}
                    {%- set heading_card =
                      {
                        'type': 'heading',
                        'icon': group.icon,
                        'heading': group.name,
                        'heading_style': 'title',
                      }
                    -%}
                    {{- heading_card -}},
                    {{- ns.heading_card_blank -}},          

                    {%- for button in group.buttons -%}
                      {%- set chore_sensor_id = button.entity_id | regex_replace('^button\\.kc_', 'sensor.kc_') | regex_replace('_claim_', '_status_') -%}
                      {%- set streak_chore_sensor_id = chore_sensor_id | regex_replace('_status_', '_streak_') -%}
                      {%- set primary = button.attributes.friendly_name.split(' - ')[2]~ (' (S)' if state_attr(chore_sensor_id, 'shared_chore') else '')  -%}
                      {%- if button.state not in ['unknown', 'unavailable', 'error'] -%}
                        {%- set ts_diff = (now().timestamp() - as_timestamp(button.state)) | float(0) -%}
                        {%- set last_update = (
                            '%.0f minutes ago' % (ts_diff / 60)
                            if ts_diff < 3600 else
                            '%.0f hours ago' % (ts_diff / 3600)
                            if ts_diff < 86400 else
                            '%.0f days ago' % (ts_diff / 86400)
                          ) -%}
                      {%- else -%}
                        {%- set last_update = '' -%}
                      {%- endif -%}
                      {%- set due_date_str = state_attr(chore_sensor_id, 'due_date') | string -%}
                      {%- set due_date = as_datetime(due_date_str).astimezone() if due_date_str and due_date_str not in ['None', 'unknown', 'unavailable'] else None -%}
                      {%- set today = now().astimezone().date() -%}
                      
                      {%- set due_date_short = 
                        'No due date' if not due_date 
                        else (
                          due_date.strftime('%-I:%M %p') if due_date.date() == today 
                          else due_date.strftime('%a %b %-d')
                        )
                      -%}   
                      {%- set chore_state = states(chore_sensor_id) -%}
                      {%- set points = state_attr(chore_sensor_id, 'default_points') | string -%}
                      {%- set streak = states(streak_chore_sensor_id) | string -%}              
                      {%- set secondary_options = 'Points: ' + points + '\n' + 'Streak: ' + streak + '\n' + 'Last: ' + last_update  + '\n \n' + 'Status: ' + chore_state + '\n' + 'Due: ' + due_date_short -%}
                      {%- set secondary = ns.points_label ~ ': ' + points + '\n' + 'Streak: ' + streak + '\n \n' + 'Status: ' + chore_state.title() + '\n' + 'Due: ' + due_date_short -%}
                      {%- set icon_color = (
                            'green' if chore_state == 'approved' else
                            'yellow' if chore_state == 'partial' else
                            'orange' if chore_state == 'claimed' else
                            'red' if chore_state == 'overdue' else
                            'grey'
                          ) -%}
                      {%- set badge_color = (
                            'green' if chore_state == 'approved' else
                            'green' if chore_state == 'partial' else
                            'green' if chore_state == 'claimed' else
                            'red' if chore_state == 'overdue' else
                            'grey'
                          ) -%}
                      {%- set badge_icon = (
                            'mdi:check-bold' if chore_state == 'approved' else
                            'mdi:check-bold' if chore_state == 'partial' else
                            'mdi:check-bold' if chore_state == 'claimed' else
                            'mdi:exclamation-thick' if chore_state == 'overdue' else
                            ''
                          ) -%}
                      {{
                        {
                          'type': 'custom:mushroom-template-card',
                          'entity': button.entity_id,
                          'primary': primary,
                          'multiline_secondary': 'false',
                          'secondary': secondary,
                          'layout': 'horizontal',
                          'icon': button.attributes.icon,
                          'icon_color': icon_color,
                          'badge_icon': badge_icon,
                          'badge_color': badge_color,
                          'tap_action': {
                            'action': 'toggle'
                          },
                          'hold_action': {
                            'action': 'more-info'
                          },
                        }
                      }},
                    {%- endfor -%}

                    {%- if (group.buttons | length is odd) -%}{{ ns.heading_card_blank }},{%- endif -%}
                  {%- endif -%}
                {%- endfor -%}                    
    cards: []
